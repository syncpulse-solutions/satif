"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4041],{7245:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"concepts/standardization","title":"Standardization","description":"Standardization is the first layer in the SATIF pipeline, responsible for converting a heterogeneous Datasource\u2014comprising various file formats (CSV, Excel, PDF, XML, etc.)\u2014into a single, canonical SDIF file.","source":"@site/docs/concepts/standardization.md","sourceDirName":"concepts","slug":"/concepts/standardization","permalink":"/satif/docs/concepts/standardization","draft":false,"unlisted":false,"editUrl":"https://github.com/syncpulse-solutions/satif/tree/main/docs/docs/concepts/standardization.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"SDIF","permalink":"/satif/docs/concepts/sdif"},"next":{"title":"Transformation","permalink":"/satif/docs/concepts/transformation"}}');var t=i(4848),r=i(8453);const a={sidebar_position:2},o="Standardization",c={},d=[{value:"Process Overview",id:"process-overview",level:2},{value:"Inputs &amp; Outputs",id:"inputs--outputs",level:2},{value:"Components",id:"components",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"standardization",children:"Standardization"})}),"\n",(0,t.jsxs)(n.p,{children:["Standardization is the first layer in the SATIF pipeline, responsible for converting a heterogeneous ",(0,t.jsx)(n.strong,{children:"Datasource"}),"\u2014comprising various file formats (CSV, Excel, PDF, XML, etc.)\u2014into a single, canonical ",(0,t.jsx)(n.a,{href:"/satif/docs/concepts/sdif",children:(0,t.jsx)(n.strong,{children:"SDIF"})})," file."]}),"\n",(0,t.jsx)(n.p,{children:"This layer systematically decouples the complexities of source file parsing and structure normalization from the subsequent Transformation Layer. It ensures that all downstream business logic operates on a consistent, predictable, and AI-interpretable data representation."}),"\n",(0,t.jsx)(n.h2,{id:"process-overview",children:"Process Overview"}),"\n",(0,t.jsx)(n.p,{children:"The Standardization Layer, executes a multi-stage, agentic approach:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"AI-Driven Parsing & Initial SDIF Generation"}),":\nAn ",(0,t.jsx)(n.code,{children:"AI Standardizer"})," orchestrator routes each file from the ",(0,t.jsx)(n.code,{children:"Datasource"})," to a specialized AI agent (e.g., ",(0,t.jsx)(n.code,{children:"AI XLSXStandardizer"}),", ",(0,t.jsx)(n.code,{children:"AI CSVStandardizer"}),", ",(0,t.jsx)(n.code,{children:"AI PDFStandardizer"}),"). These agents are responsible for:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Intelligently interpreting file content. This can involve sophisticated logic such as visual layout analysis for complex Excel files (potentially leveraging an ",(0,t.jsx)(n.code,{children:"XLSX Representer"})," to understand structure from a visual rendering), dynamic parameter inference for CSVs, or OCR for PDFs."]}),"\n",(0,t.jsx)(n.li,{children:"Extracting all relevant data entities: structured tables, semi-structured objects (like JSON), and binary media (images, etc.)."}),"\n",(0,t.jsxs)(n.li,{children:["Generating an initial ",(0,t.jsx)(n.a,{href:"/satif/docs/concepts/sdif",children:(0,t.jsx)(n.strong,{children:"SDIF"})})," file. file tailored to that individual source file."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"SDIF Merge"}),":\nIf the ",(0,t.jsx)(n.code,{children:"Datasource"})," contains multiple files, the individual SDIF outputs from each file-specific standardizer are consolidated into a single, comprehensive SDIF structure."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Schema Enforcement"}),":\nIf an ",(0,t.jsx)(n.code,{children:"sdif_schema"})," (target schema definition) is provided, the merged SDIF undergoes schema validation and adaptation. The ",(0,t.jsx)(n.code,{children:"Schema Adapter"})," component attempts to conform the data to this target schema. This iterative process (e.g., ",(0,t.jsx)(n.code,{children:"max_iteration = 5"}),") may involve data type coercions, structural transformations, or flagging discrepancies. If conformity cannot be achieved, an error is raised."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Data Tidying (Optional)"}),":\nA ",(0,t.jsx)(n.code,{children:"Tidy Adapter"})," can perform further data cleaning, normalization, or restructuring. It transforms all tables into tidy data tables."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The final output is a single ",(0,t.jsx)(n.a,{href:"/satif/docs/concepts/sdif",children:(0,t.jsx)(n.strong,{children:"SDIF"})})," file, primed for the Transformation Layer."]}),"\n",(0,t.jsx)(n.h2,{id:"inputs--outputs",children:"Inputs & Outputs"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Inputs"}),":\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Datasource"}),": A collection of one or more source files (e.g., ",(0,t.jsx)(n.code,{children:"*.xlsx"}),", ",(0,t.jsx)(n.code,{children:"*.csv"}),", ",(0,t.jsx)(n.code,{children:"*.pdf"}),")."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:".SDIF Schema"})," (Optional): A JSON file defining the target schema for the output SDIF."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Output"}),":\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"sdif_standardized"})," (e.g., ",(0,t.jsx)(n.code,{children:"invoices.sdif"}),"): A single SDIF file."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"components",children:"Components"}),"\n",(0,t.jsx)(n.p,{children:"The Standardization Layer conceptually involves:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:[(0,t.jsx)(n.code,{children:"AI Standardizer"})," (Orchestrator)"]}),": Dispatches files to appropriate specialized standardizer agents."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Format-Specific AI Agents"})," (e.g., ",(0,t.jsx)(n.code,{children:"AI XLSXStandardizer"}),"): Perform advanced, format-aware data extraction."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:[(0,t.jsx)(n.code,{children:"SDIF Merge"})," Utility"]}),": Consolidates multiple intermediate SDIFs."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Schema Adapter"})}),": Enforces conformity to a target SDIF schema."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Tidy Adapter"})}),": Applies data cleaning and refinement rules."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var s=i(6540);const t={},r=s.createContext(t);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);