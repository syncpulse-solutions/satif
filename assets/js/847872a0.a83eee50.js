"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6278],{8453:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>a});var s=n(6540);const t={},l=s.createContext(t);function r(e){const i=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(l.Provider,{value:i},e.children)}},9437:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>a,default:()=>_,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"api_reference/satif_core/satif_sdk/utils","title":"satif_sdk.utils","description":"ENCODING\\\\SAMPLE\\\\SIZE","source":"@site/docs/api_reference/satif_core/satif_sdk/utils.md","sourceDirName":"api_reference/satif_core/satif_sdk","slug":"/api_reference/satif_core/satif_sdk/utils","permalink":"/satif/docs/api_reference/satif_core/satif_sdk/utils","draft":false,"unlisted":false,"editUrl":"https://github.com/syncpulse-solutions/satif/tree/main/docs/docs/api_reference/satif_core/satif_sdk/utils.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"utils","title":"satif_sdk.utils"},"sidebar":"tutorialSidebar","previous":{"title":"sql","permalink":"/satif/docs/api_reference/satif_core/satif_sdk/transformers/sql"},"next":{"title":"sdif_db","permalink":"/satif/docs/api_reference/satif_core/sdif_db"}}');var t=n(4848),l=n(8453);const r={sidebar_label:"utils",title:"satif_sdk.utils"},a=void 0,o={},c=[{value:"ENCODING_SAMPLE_SIZE",id:"encoding_sample_size",level:4},{value:"DELIMITER_SAMPLE_SIZE",id:"delimiter_sample_size",level:4},{value:"sanitize_sql_identifier",id:"sanitize_sql_identifier",level:4},{value:"normalize_list_argument",id:"normalize_list_argument",level:4},{value:"validate_skip_rows_config",id:"validate_skip_rows_config",level:4},{value:"validate_skip_columns_config",id:"validate_skip_columns_config",level:4},{value:"parse_skip_rows_config",id:"parse_skip_rows_config",level:4},{value:"parse_skip_columns_config",id:"parse_skip_columns_config",level:4},{value:"detect_file_encoding",id:"detect_file_encoding",level:4},{value:"detect_csv_delimiter",id:"detect_csv_delimiter",level:4}];function d(e){const i={blockquote:"blockquote",code:"code",h4:"h4",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h4,{id:"encoding_sample_size",children:"ENCODING_SAMPLE_SIZE"}),"\n",(0,t.jsxs)(i.blockquote,{children:["\n",(0,t.jsx)(i.p,{children:"Bytes for encoding detection"}),"\n"]}),"\n",(0,t.jsx)(i.h4,{id:"delimiter_sample_size",children:"DELIMITER_SAMPLE_SIZE"}),"\n",(0,t.jsxs)(i.blockquote,{children:["\n",(0,t.jsx)(i.p,{children:"Bytes for delimiter detection"}),"\n"]}),"\n",(0,t.jsx)(i.h4,{id:"sanitize_sql_identifier",children:"sanitize_sql_identifier"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:'def sanitize_sql_identifier(name: str, prefix: str = "item") -> str\n'})}),"\n",(0,t.jsxs)(i.blockquote,{children:["\n",(0,t.jsx)(i.p,{children:"Clean up a string to be a safe SQL identifier.\nReplaces problematic characters with underscores, ensures it starts with a\nletter or underscore, and appends an underscore if it's a basic SQL keyword."}),"\n"]}),"\n",(0,t.jsx)(i.h4,{id:"normalize_list_argument",children:"normalize_list_argument"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:"def normalize_list_argument(arg_value: Optional[Union[T, List[Optional[T]]]],\n                            arg_name_for_error: str,\n                            expected_len: int) -> List[Optional[T]]\n"})}),"\n",(0,t.jsxs)(i.blockquote,{children:["\n",(0,t.jsx)(i.p,{children:"Normalizes an argument that can be a single item or a list into a list\nof a specific expected length."}),"\n",(0,t.jsx)(i.p,{children:"If arg_value is a single item, it's repeated expected_len times.\nIf arg_value is a list, its length must match expected_len.\nIf arg_value is None, a list of Nones of expected_len is returned."}),"\n"]}),"\n",(0,t.jsx)(i.h4,{id:"validate_skip_rows_config",children:"validate_skip_rows_config"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:"def validate_skip_rows_config(\n        config: SkipRowsConfig,\n        file_name_for_error: Optional[str] = None) -> SkipRowsConfig\n"})}),"\n",(0,t.jsxs)(i.blockquote,{children:["\n",(0,t.jsx)(i.p,{children:"Validate types and values for skip_rows config."}),"\n"]}),"\n",(0,t.jsx)(i.h4,{id:"validate_skip_columns_config",children:"validate_skip_columns_config"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:"def validate_skip_columns_config(\n        config: SkipColumnsConfig,\n        file_name_for_error: Optional[str] = None) -> SkipColumnsConfig\n"})}),"\n",(0,t.jsxs)(i.blockquote,{children:["\n",(0,t.jsx)(i.p,{children:"Validate types and values for skip_columns config."}),"\n"]}),"\n",(0,t.jsx)(i.h4,{id:"parse_skip_rows_config",children:"parse_skip_rows_config"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:"def parse_skip_rows_config(\n        skip_rows_config: SkipRowsConfig) -> Union[int, Set[int]]\n"})}),"\n",(0,t.jsxs)(i.blockquote,{children:["\n",(0,t.jsx)(i.p,{children:"Parse validated skip_rows config into int (for initial skip) or Set[int] (for indexed skip)."}),"\n"]}),"\n",(0,t.jsx)(i.h4,{id:"parse_skip_columns_config",children:"parse_skip_columns_config"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:"def parse_skip_columns_config(\n        skip_columns_config: SkipColumnsConfig) -> Tuple[Set[int], Set[str]]\n"})}),"\n",(0,t.jsxs)(i.blockquote,{children:["\n",(0,t.jsx)(i.p,{children:"Parse validated skip_columns config into separate sets for indices and names."}),"\n"]}),"\n",(0,t.jsx)(i.h4,{id:"detect_file_encoding",children:"detect_file_encoding"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:"def detect_file_encoding(file_path: Path,\n                         sample_size: int = ENCODING_SAMPLE_SIZE) -> str\n"})}),"\n",(0,t.jsxs)(i.blockquote,{children:["\n",(0,t.jsx)(i.p,{children:"Detect file encoding using charset-normalizer."}),"\n"]}),"\n",(0,t.jsx)(i.h4,{id:"detect_csv_delimiter",children:"detect_csv_delimiter"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:"def detect_csv_delimiter(sample_text: str) -> str\n"})}),"\n",(0,t.jsxs)(i.blockquote,{children:["\n",(0,t.jsx)(i.p,{children:"Detect CSV delimiter using clevercsv.Sniffer."}),"\n"]})]})}function _(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);