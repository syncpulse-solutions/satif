"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8107],{6080:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>o,contentTitle:()=>a,default:()=>f,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"api_reference/satif_ai/utils/merge_sdif","title":"satif_ai.utils.merge_sdif","description":"merge\\\\sdif\\\\files","source":"@site/docs/api_reference/satif_ai/utils/merge_sdif.md","sourceDirName":"api_reference/satif_ai/utils","slug":"/api_reference/satif_ai/utils/merge_sdif","permalink":"/satif/docs/api_reference/satif_ai/utils/merge_sdif","draft":false,"unlisted":false,"editUrl":"https://github.com/syncpulse-solutions/satif/tree/main/docs/docs/api_reference/satif_ai/utils/merge_sdif.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"merge_sdif","title":"satif_ai.utils.merge_sdif"},"sidebar":"tutorialSidebar","previous":{"title":"syncpulse","permalink":"/satif/docs/api_reference/satif_ai/transformation_builders/syncpulse"},"next":{"title":"openai_mcp","permalink":"/satif/docs/api_reference/satif_ai/utils/openai_mcp"}}');var r=s(4848),n=s(8453);const l={sidebar_label:"merge_sdif",title:"satif_ai.utils.merge_sdif"},a=void 0,o={},d=[{value:"merge_sdif_files",id:"merge_sdif_files",level:4}];function c(e){const i={blockquote:"blockquote",code:"code",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.h4,{id:"merge_sdif_files",children:"merge_sdif_files"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-python",children:"def merge_sdif_files(sdif_paths: List[SDIFPath], output_path: Path) -> Path\n"})}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsx)(i.p,{children:"Merges multiple SDIF files into a single new SDIF file."}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Arguments"}),":"]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"sdif_paths"})," - A list of paths to the SDIF files to merge."]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"output_path"})," - The full path where the merged SDIF file should be saved.\nIts parent directory will be created if it doesn't exist.\nIf output_path is an existing file, it will be overwritten.\nIf output_path is an existing directory, a ValueError is raised."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Returns"}),":"]}),"\n",(0,r.jsx)(i.p,{children:"Path to the newly created merged SDIF file (same as output_path)."}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Raises"}),":"]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"ValueError"})," - If no SDIF files are provided, or output_path is invalid (e.g., an existing directory)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"FileNotFoundError"})," - If a source SDIF file does not exist."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"sqlite3.Error"})," - For database-related errors during merging."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"RuntimeError"})," - For critical errors like inability to generate unique names."]}),"\n"]}),"\n"]})]})}function f(e={}){const{wrapper:i}={...(0,n.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,i,s)=>{s.d(i,{R:()=>l,x:()=>a});var t=s(6540);const r={},n=t.createContext(r);function l(e){const i=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(n.Provider,{value:i},e.children)}}}]);