"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9892],{7915:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"api_reference/satif_ai/standardize","title":"satif_ai.standardize","description":"astandardize","source":"@site/docs/api_reference/satif_ai/standardize.md","sourceDirName":"api_reference/satif_ai","slug":"/api_reference/satif_ai/standardize","permalink":"/satif/docs/api_reference/satif_ai/standardize","draft":false,"unlisted":false,"editUrl":"https://github.com/syncpulse-solutions/satif/tree/main/docs/docs/api_reference/satif_ai/standardize.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"standardize","title":"satif_ai.standardize"},"sidebar":"tutorialSidebar","previous":{"title":"tidy","permalink":"/satif/docs/api_reference/satif_ai/adapters/tidy"},"next":{"title":"ai","permalink":"/satif/docs/api_reference/satif_ai/standardizers/ai"}}');var a=t(4848),s=t(8453);const d={sidebar_label:"standardize",title:"satif_ai.standardize"},r=void 0,o={},c=[{value:"astandardize",id:"astandardize",level:4}];function l(e){const n={blockquote:"blockquote",code:"code",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h4,{id:"astandardize",children:"astandardize"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"async def astandardize(\n        datasource: Datasource,\n        output_path: SDIFPath,\n        *,\n        overwrite: bool = False,\n        sdif_schema: Optional[Union[FilePath, Dict[str, Any]]] = None,\n        tidy_adapter: Union[bool, TidyAdapter] = False,\n        config: Optional[Dict[str, Any]] = None,\n        standardizer: Optional[AsyncStandardizer] = None,\n        mcp_server: Optional[Any] = None,\n        mcp_session: Optional[Any] = None,\n        llm_model: Optional[str] = None) -> StandardizationResult\n"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Asynchronously standardizes a datasource into a single, canonical SDIF SQLite file."}),"\n",(0,a.jsx)(n.p,{children:"This function serves as the primary entry point for the SATIF standardization layer.\nIt orchestrates the conversion of various input file formats (e.g., CSV, Excel, PDF)\nfrom the provided datasource into a unified SDIF (Standard Data Interchange Format)\nSQLite file. The process may involve AI-driven parsing, schema adaptation, and\ndata tidying, depending on the configuration and the capabilities of the\nunderlying standardizer."}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"datasource"})," - The source of the data to be standardized. This can be a\nsingle file path (str or Path), a list of file paths, or other\ndatasource types supported by the chosen standardizer."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"output_path"}),' - The path (str or Path) where the output SDIF SQLite database file\nwill be created (e.g., "./output/my_data.sdif").']}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"overwrite"})," - If True, an existing SDIF file at ",(0,a.jsx)(n.code,{children:"output_path"})," will be\noverwritten. Defaults to False."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"sdif_schema"})," - Optional. Path to an SDIF schema definition file (e.g., a JSON file)\nor a dictionary representing the schema. If provided, the\nstandardization process (specifically if using the default\n",(0,a.jsx)(n.code,{children:"AIStandardizer"}),") may attempt to adapt the data to this\ntarget schema."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"tidy_adapter"})," - Optional. If True, a default ",(0,a.jsx)(n.code,{children:"TidyAdapter"})," may be used.\nAlternatively, a specific ",(0,a.jsx)(n.code,{children:"TidyAdapter"})," instance can be provided\nto perform data tidying processes (e.g., cleaning, normalization,\nrestructuring tables). If False (default), no explicit tidying\nstep is initiated by this top-level function, though underlying\nstandardizers might perform their own internal tidying.\nThe specifics depend on the standardizer's capabilities."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"config"})," - Optional. A dictionary for advanced or standardizer-specific\nconfigurations. This config is passed directly to the\n",(0,a.jsx)(n.code,{children:"output_path"}),"0 method of the chosen standardizer."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"output_path"}),"1 - Optional. An instance of an ",(0,a.jsx)(n.code,{children:"output_path"}),"2 subclass.\nIf provided, this instance will be used for standardization.\nThis allows for using pre-configured or custom standardizers.\nIf None, a default ",(0,a.jsx)(n.code,{children:"AIStandardizer"})," is instantiated using\n",(0,a.jsx)(n.code,{children:"output_path"}),"4, ",(0,a.jsx)(n.code,{children:"output_path"}),"5, ",(0,a.jsx)(n.code,{children:"output_path"}),"6, ",(0,a.jsx)(n.code,{children:"sdif_schema"}),",\nand ",(0,a.jsx)(n.code,{children:"tidy_adapter"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"output_path"}),"4 - Optional. The MCP (Model Coordination Platform) server instance.\nUsed if ",(0,a.jsx)(n.code,{children:"output_path"}),"1 is None for the default ",(0,a.jsx)(n.code,{children:"AIStandardizer"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"output_path"}),"5 - Optional. The MCP session or transport object.\nUsed if ",(0,a.jsx)(n.code,{children:"output_path"}),"1 is None for the default ",(0,a.jsx)(n.code,{children:"AIStandardizer"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"output_path"}),"6 - Optional. The language model to be used by the default ",(0,a.jsx)(n.code,{children:"AIStandardizer"}),"\nif no ",(0,a.jsx)(n.code,{children:"output_path"}),'1 instance is provided (e.g., "gpt-4o").\nEach standardizer may have its own default model.']}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,a.jsxs)(n.p,{children:["A ",(0,a.jsx)(n.code,{children:"overwrite"}),"8 object containing:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"output_path"}),": The absolute ",(0,a.jsx)(n.code,{children:"output_path"}),"0 to the created or updated SDIF database file."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"output_path"}),"1: An optional dictionary detailing configurations used for\neach processed input file, if applicable and returned by\nthe standardizer."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Raises"}),":"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"output_path"}),"2 - If the ",(0,a.jsx)(n.code,{children:"datasource"})," (or parts of it) does not exist."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"output_path"}),"4 - If ",(0,a.jsx)(n.code,{children:"output_path"})," exists and ",(0,a.jsx)(n.code,{children:"overwrite"})," is False."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"output_path"}),"7 - If input arguments are invalid (e.g., unsupported datasource type)."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"output_path"}),"8 - For general errors during the standardization process.\nSpecific exceptions may also be raised by the underlying\nstandardizer implementation."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>r});var i=t(6540);const a={},s=i.createContext(a);function d(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);