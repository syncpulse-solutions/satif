"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2308],{2808:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"api_reference/satif_sdk/code_executors/local_executor","title":"satif_sdk.code_executors.local_executor","description":"LocalCodeExecutor Objects","source":"@site/docs/api_reference/satif_sdk/code_executors/local_executor.md","sourceDirName":"api_reference/satif_sdk/code_executors","slug":"/api_reference/satif_sdk/code_executors/local_executor","permalink":"/satif/docs/api_reference/satif_sdk/code_executors/local_executor","draft":false,"unlisted":false,"editUrl":"https://github.com/syncpulse-solutions/satif/tree/main/docs/docs/api_reference/satif_sdk/code_executors/local_executor.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"local_executor","title":"satif_sdk.code_executors.local_executor"},"sidebar":"tutorialSidebar","previous":{"title":"e2b_executor","permalink":"/satif/docs/api_reference/satif_sdk/code_executors/e2b_executor"},"next":{"title":"csv","permalink":"/satif/docs/api_reference/satif_sdk/comparators/csv"}}');var s=t(4848),c=t(8453);const o={sidebar_label:"local_executor",title:"satif_sdk.code_executors.local_executor"},r=void 0,d={},a=[{value:"LocalCodeExecutor Objects",id:"localcodeexecutor-objects",level:2},{value:"__init__",id:"__init__",level:4},{value:"execute",id:"execute",level:4}];function l(e){const n={blockquote:"blockquote",code:"code",h2:"h2",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"localcodeexecutor-objects",children:"LocalCodeExecutor Objects"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class LocalCodeExecutor(CodeExecutor)\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Executes user-provided Python code strings locally using Python's built-in ",(0,s.jsx)(n.code,{children:"exec"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"This executor is responsible for:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Setting up an SQLite database environment based on provided SDIF source file paths.\nThis includes creating an in-memory database (if multiple sources) or connecting\nto a single source, and then ATTACHing all specified SDIF files as schemas."}),"\n",(0,s.jsxs)(n.li,{children:["Executing a given ",(0,s.jsx)(n.code,{children:"code"})," string in an environment where this database connection\n(or an SDIFDatabase wrapper) is accessible, along with other standard libraries\nand provided ",(0,s.jsx)(n.code,{children:"extra_context"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Identifying a specific function within the executed ",(0,s.jsx)(n.code,{children:"code"})," by its ",(0,s.jsx)(n.code,{children:"function_name"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Calling this identified function, passing it the live SQLite connection (as ",(0,s.jsx)(n.code,{children:"conn"}),")\nor an SDIFDatabase instance (as ",(0,s.jsx)(n.code,{children:"db"}),"), and context."]}),"\n",(0,s.jsx)(n.li,{children:"Returning the result produced by the called function."}),"\n",(0,s.jsx)(n.li,{children:"Ensuring the database connection is properly closed and resources are cleaned up."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Security Warning:"}),"\nThis executor runs arbitrary Python code directly on the host machine where it is instantiated.\nIt provides ",(0,s.jsx)(n.strong,{children:"NO SANDBOXING OR SECURITY ISOLATION"}),". Therefore, it should ",(0,s.jsx)(n.strong,{children:"ONLY"})," be used\nin trusted environments and with code from trusted sources."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"__init__",children:"__init__"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def __init__(initial_context: Optional[Dict[str, Any]] = None,\n             disable_security_warning: bool = False)\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Initializes the LocalCodeExecutor."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,s.jsx)(n.p,{children:"initial_context:\nAn optional dictionary of global variables to make available\nduring code execution. These will be merged with (and can\noverride) the default set of globals provided by the executor."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"disable_security_warning"})," - If True, suppresses the security warning log."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"execute",children:"execute"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def execute(code: str, function_name: str, sdif_sources: Dict[str, Path],\n            extra_context: Dict[str, Any]) -> Dict[str, Any]\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Sets up a database, executes the code string to define a function,\nthen calls that function with the database connection (as ",(0,s.jsx)(n.code,{children:"conn"})," or ",(0,s.jsx)(n.code,{children:"db"}),") and context."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,s.jsxs)(n.p,{children:["code:\nA string containing the Python script to be executed. This script\nis expected to define the function identified by ",(0,s.jsx)(n.code,{children:"function_name"}),".\nIt can include imports, helper functions, and class definitions\nas needed for the main transformation function.\nfunction_name:\nThe name of the function (defined in ",(0,s.jsx)(n.code,{children:"code"}),") to be invoked.\nsdif_sources:\nA dictionary mapping schema names (str) to resolved ",(0,s.jsx)(n.code,{children:"Path"})," objects\nof the SDIF database files. This executor will create/connect to\nan SQLite database and ATTACH these sources.\nextra_context:\nA dictionary of additional objects and data to be made available\nto the transformation logic."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The entire ",(0,s.jsx)(n.code,{children:"extra_context"})," dictionary is passed as the ",(0,s.jsx)(n.code,{children:"context"}),"\nargument to the transformation function if its signature includes it."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Additionally, all key-value pairs in ",(0,s.jsx)(n.code,{children:"extra_context"})," are injected\nas global variables into the environment where the ",(0,s.jsx)(n.code,{children:"code"})," string\nis initially executed. If ",(0,s.jsx)(n.code,{children:"extra_context"})," contains keys that\nmatch standard globals (e.g., 'pd', 'json') or the explicitly\nprovided 'conn' or 'context' globals, they will be overwritten\nin that global scope."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,s.jsxs)(n.p,{children:["A dictionary, which is the result of calling the user-defined\ntransformation function (",(0,s.jsx)(n.code,{children:"function_name"}),"). The keys are typically\noutput filenames, and values are the data to be written."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Raises"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"db"}),"1 - If any error occurs during the process, including:\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Database setup errors from ",(0,s.jsx)(n.code,{children:"db"}),"2."]}),"\n",(0,s.jsxs)(n.li,{children:["Syntax errors in the ",(0,s.jsx)(n.code,{children:"code"})," string."]}),"\n",(0,s.jsxs)(n.li,{children:["The specified ",(0,s.jsx)(n.code,{children:"function_name"})," not being found after executing ",(0,s.jsx)(n.code,{children:"code"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["The identified ",(0,s.jsx)(n.code,{children:"function_name"})," not being a callable function."]}),"\n",(0,s.jsxs)(n.li,{children:["The function having an incompatible signature (e.g., not accepting ",(0,s.jsx)(n.code,{children:"conn"}),")."]}),"\n",(0,s.jsx)(n.li,{children:"The function not returning a dictionary."}),"\n",(0,s.jsx)(n.li,{children:"Any exception raised during the execution of the user's transformation function."}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var i=t(6540);const s={},c=i.createContext(s);function o(e){const n=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);