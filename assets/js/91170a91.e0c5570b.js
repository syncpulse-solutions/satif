"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9198],{3056:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>c,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"api_reference/satif_core/comparators/base","title":"satif_core.comparators.base","description":"Comparator Objects","source":"@site/docs/api_reference/satif_core/comparators/base.md","sourceDirName":"api_reference/satif_core/comparators","slug":"/api_reference/satif_core/comparators/base","permalink":"/satif/docs/api_reference/satif_core/comparators/base","draft":false,"unlisted":false,"editUrl":"https://github.com/syncpulse-solutions/satif/tree/main/docs/docs/api_reference/satif_core/comparators/base.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"base","title":"satif_core.comparators.base"},"sidebar":"tutorialSidebar","previous":{"title":"base","permalink":"/satif/docs/api_reference/satif_core/code_executors/base"},"next":{"title":"exceptions","permalink":"/satif/docs/api_reference/satif_core/exceptions"}}');var t=s(4848),o=s(8453);const c={sidebar_label:"base",title:"satif_core.comparators.base"},i=void 0,a={},l=[{value:"Comparator Objects",id:"comparator-objects",level:2},{value:"compare",id:"compare",level:4}];function d(e){const r={blockquote:"blockquote",code:"code",h2:"h2",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h2,{id:"comparator-objects",children:"Comparator Objects"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"class Comparator(abc.ABC)\n"})}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsx)(r.p,{children:"Abstract base class for file comparators."}),"\n",(0,t.jsx)(r.p,{children:"Defines the common interface for comparing two files of a specific type\nand generating a structured report on their equivalence and differences."}),"\n"]}),"\n",(0,t.jsx)(r.h4,{id:"compare",children:"compare"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"@abc.abstractmethod\ndef compare(file_path1: Path,\n            file_path2: Path,\n            file_config: Optional[dict[str, Any]] = None,\n            **kwargs: Any) -> Dict[str, Any]\n"})}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsx)(r.p,{children:"Compares two files and returns a detailed report."}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Arguments"}),":"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"file_path1"})," - Path to the first file."]}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"file_path2"})," - Path to the second file."]}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"file_config"})," - Configuration for the files for parsing."]}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"**kwargs"})," - Comparator-specific options (e.g., ignore_row_order for CSV)."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Returns"}),":"]}),"\n",(0,t.jsx)(r.p,{children:"A dictionary containing the comparison results, typically including:\n{"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:'"files"'}),' - {"file1": str, "file2": str},']}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:'"comparison_params"'})," - {param_name: value, ...}, // Parameters used"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:'"are_equivalent"'})," - bool, // Overall equivalence based on findings"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:'"summary"'})," - List[str], // High-level summary of findings"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:'"details"'})," - { ... } // Detailed breakdown of differences (structure depends on comparator)\n}"]}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,r,s)=>{s.d(r,{R:()=>c,x:()=>i});var n=s(6540);const t={},o=n.createContext(t);function c(e){const r=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),n.createElement(o.Provider,{value:r},e.children)}}}]);