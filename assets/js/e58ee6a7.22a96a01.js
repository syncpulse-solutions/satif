"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7265],{5679:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"adapters/tidy_adapter","title":"Tidy Adapter","description":"The TidyAdapter transforms SDIF database tables into tidy format using AI-generated code. It follows tidy data principles (each variable forms a column, each observation forms a row, and each observational unit forms a table) to restructure data for better analysis.","source":"@site/docs/adapters/tidy_adapter.md","sourceDirName":"adapters","slug":"/adapters/tidy_adapter","permalink":"/satif/docs/adapters/tidy_adapter","draft":false,"unlisted":false,"editUrl":"https://github.com/syncpulse-solutions/satif/tree/main/docs/docs/adapters/tidy_adapter.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Schema Adapter","permalink":"/satif/docs/adapters/schema_adapter"},"next":{"title":"CodeAdapter (WIP)","permalink":"/satif/docs/adapters/code_adapter"}}');var r=t(4848),i=t(8453);const a={sidebar_position:2},d="Tidy Adapter",o={},l=[{value:"1. Basic Usage",id:"1-basic-usage",level:2},{value:"2. How It Works",id:"2-how-it-works",level:2},{value:"3. Constructor Parameters",id:"3-constructor-parameters",level:2},{value:"4. Methods",id:"4-methods",level:2},{value:"<code>adapt(sdif)</code>",id:"adaptsdif",level:3},{value:"5. Error Handling",id:"5-error-handling",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"tidy-adapter",children:"Tidy Adapter"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"TidyAdapter"})," transforms SDIF database tables into tidy format using AI-generated code. It follows tidy data principles (each variable forms a column, each observation forms a row, and each observational unit forms a table) to restructure data for better analysis."]}),"\n",(0,r.jsx)(n.h2,{id:"1-basic-usage",children:"1. Basic Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from satif_ai.adapters import TidyAdapter\nfrom pathlib import Path\n\n# ... initialize mcp_server and mcp_session\n\n# Create the adapter\nadapter = TidyAdapter(\n    mcp_server=mcp_server,\n    mcp_session=mcp_session,\n    llm_model="o4-mini"  # Default model\n)\n\n# Path to input SDIF file\ninput_sdif_path = "input_data.sdif"\n\n# Transform the data - returns path to new SDIF with tidied data\ntidied_sdif_path = adapter.adapt(input_sdif_path)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"2-how-it-works",children:"2. How It Works"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"TidyAdapter"})," operates through a multi-step process:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Analysis:"})," Extracts schema and sample data from the input SDIF database"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"AI Code Generation:"})," Prompts an LLM to generate Python code that will transform the data into tidy format"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Code Execution:"})," Runs the generated code using a ",(0,r.jsx)(n.code,{children:"CodeAdapter"})," to transform the SDIF database in place"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Output:"})," Creates a new SDIF file containing the tidied data structure"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The adapter uses a specialized prompt that instructs the AI to follow tidy data principles when restructuring tables. Common operations in the generated code typically include:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Melting wide-format tables into long format"}),"\n",(0,r.jsx)(n.li,{children:"Splitting columns with multiple values"}),"\n",(0,r.jsx)(n.li,{children:"Creating new tables for different observation types"}),"\n",(0,r.jsx)(n.li,{children:"Standardizing variable names and formats"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"3-constructor-parameters",children:"3. Constructor Parameters"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'TidyAdapter(\n    mcp_server: MCPServer,\n    mcp_session: ClientSession,\n    llm_model: str = "o4-mini",\n    max_iterations: int = 5\n)\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:[(0,r.jsx)(n.code,{children:"mcp_server"}),":"]})," An instance of ",(0,r.jsx)(n.code,{children:"MCPServer"})," for agent communication"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:[(0,r.jsx)(n.code,{children:"mcp_session"}),":"]})," An instance of ",(0,r.jsx)(n.code,{children:"ClientSession"})," for resource/prompt fetching"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:[(0,r.jsx)(n.code,{children:"llm_model"}),":"]}),' Name of the language model to use for the AI agent (default: "o4-mini")']}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:[(0,r.jsx)(n.code,{children:"max_iterations"}),":"]})," Maximum number of attempts the agent gets to refine the code (default: 5)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"4-methods",children:"4. Methods"}),"\n",(0,r.jsx)(n.h3,{id:"adaptsdif",children:(0,r.jsx)(n.code,{children:"adapt(sdif)"})}),"\n",(0,r.jsx)(n.p,{children:"Transforms the data in the input SDIF to tidy format using an AI agent."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"adapt(sdif: Union[SDIFPath, SDIFDatabase]) -> Datasource\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:[(0,r.jsx)(n.code,{children:"sdif"}),":"]})," The input SDIF database path or instance. If an instance is provided, its connection will be closed."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Path to the new SDIF file containing the tidied data."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Raises:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:[(0,r.jsx)(n.code,{children:"FileNotFoundError"}),":"]})," If the input SDIF path doesn't exist"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:[(0,r.jsx)(n.code,{children:"RuntimeError"}),":"]})," If the agent fails to produce valid tidy code"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:[(0,r.jsx)(n.code,{children:"Exception"}),":"]})," For unexpected errors during the process"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"5-error-handling",children:"5. Error Handling"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"TidyAdapter"})," provides detailed error messages when issues occur:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'try:\n    tidied_path = adapter.adapt(input_sdif_path)\nexcept FileNotFoundError as e:\n    print(f"Input file error: {e}")\nexcept RuntimeError as e:\n    print(f"AI code generation error: {e}")\nexcept Exception as e:\n    print(f"Unexpected error: {e}")\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>d});var s=t(6540);const r={},i=s.createContext(r);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);