import type {SidebarsConfig} from '@docusaurus/plugin-content-docs';

// This runs in Node.js - Don't use client-side code here (browser APIs, JSX...)

/**
 * Creating a sidebar enables you to:
 - create an ordered group of docs
 - render a sidebar for each doc of that group
 - provide next/previous navigation

 The sidebars can be generated from the filesystem, or explicitly defined here.

 Create as many sidebars as you want.
 */
const sidebars: SidebarsConfig = {
  // By default, Docusaurus generates a sidebar from the docs folder structure
  // tutorialSidebar: [{type: 'autogenerated', dirName: '.'}],

  // But you can create a sidebar manually
  tutorialSidebar: [
    'overview',
    {
      type: 'category',
      label: 'Core Concepts',
      link: {type: 'generated-index', slug: '/core-concepts'},
      items: [
        {type: 'autogenerated', dirName: 'concepts'},

      ],
      collapsible: true,
      collapsed: false,
    },
    'quickstart',
    {
      type: 'category',
      label: 'Use Cases',
      link: {type: 'generated-index', slug: '/use-cases'},
      items: [
        {type: 'autogenerated', dirName: 'use_cases'},
      ],
      collapsible: true,
      collapsed: false,
    },
    'terminology',
    {
      type: 'html',
      value: '<hr style="margin: 0.5rem 0; background-color: var(--ifm-color-emphasis-300);" />',
      className: 'sidebar-separator',
    },
    {
      type: 'category',
      label: 'Standardizers',
      link: {type: 'generated-index', slug: '/standardizers'},
      items: [
        {type: 'autogenerated', dirName: 'standardizers'},

      ],
    },
    {
      type: 'category',
      label: 'Transformers',
      link: {type: 'generated-index', description: 'Transformers', slug: '/transformers'},
      items: [        {type: 'autogenerated', dirName: 'transformers'},
      ],
    },
    {
      type: 'category',
      label: 'Transformation Builders',
      link: {type: 'generated-index', slug: '/transformation-builders'},
      items: [        {type: 'autogenerated', dirName: 'transformation_builders'},
      ],
    },
    {
      type: 'category',
      label: 'Adapters',
      link: {type: 'generated-index', slug: '/adapters'},
      items: [
        {type: 'autogenerated', dirName: 'adapters'},
      ],
    },
    'sdif_database',
    {
      type: 'category',
      label: 'Comparators',
      link: {type: 'generated-index', slug: '/comparators'},
      items: [
        {type: 'autogenerated', dirName: 'comparators'},

      ],
    },
    {
      type: 'category',
      label: 'Representers',
      link: {type: 'generated-index', slug: '/representers'},
      items: [
        {type: 'autogenerated', dirName: 'representers'},

      ],
    },
    {
      type: 'category',
      label: 'Code Executors',
      link: {type: 'generated-index', slug: '/code-executors'},
      items: [        {type: 'autogenerated', dirName: 'code_executors'},
      ],
    },
    {
      type: 'html',
      value: '<hr style="margin: 0.5rem 0; background-color: var(--ifm-color-emphasis-300);" />',
      className: 'sidebar-separator',
    },
    {
      type: 'category',
      label: 'API Reference',
      link: {type: 'generated-index', slug: '/api-reference'},
      items: [        {type: 'autogenerated', dirName: 'api_reference'},
      ],
    },
    {
      type: 'html',
      value: '<hr style="margin: 0.5rem 0; background-color: var(--ifm-color-emphasis-300);" />',
      className: 'sidebar-separator',
    },
    {
      type: 'category',
      label: 'RFC',
      link: {type: 'generated-index', slug: '/rfc'},
      items: [        {type: 'autogenerated', dirName: 'rfc'},
      ],
    },
    'libs',
    'roadmap',
  ],
};

export default sidebars;
