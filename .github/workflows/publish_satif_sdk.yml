name: Release satif-sdk Package

on:
  push:
    tags:
      - 'satif-sdk/v*' # Trigger on tags starting with satif-sdk/v

permissions:
  # Needed for checkout and creating GitHub Releases
  contents: write
  # Needed for OIDC token exchange with PyPI for trusted publishing
  id-token: write

jobs:
  release:
    # environment: pypi # Add this if you configured an environment in PyPI trusted publisher settings
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch all history and tags for changelog generation
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          # Cache poetry dependencies
          # cache-key: |
          #   ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Build package
        id: build
        run: |
          cd libs/sdk
          # Update version in pyproject.toml if needed before building, e.g.:
          # poetry version $(echo ${{ github.ref_name }} | sed 's/satif-sdk\\/v//')
          poetry build
          # Get the version from pyproject.toml (should match tag)
          PACKAGE_VERSION=$(poetry version --short)
          echo "package_version=${PACKAGE_VERSION}" >> $GITHUB_OUTPUT
          cd ../..

      # --- Changelog Generation ---
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*' # Use the latest Long Term Support version

      - name: Install Conventional Changelog CLI
        run: npm install -g conventional-changelog-cli

      - name: Generate Changelog Content
        id: changelog
        run: |
          # Generate changelog based on commits since the last satif-sdk tag
          # Using a preset compatible with conventional commits (e.g., angular)
          # The output is captured into an environment variable
          CHANGELOG_CONTENT=$(conventional-changelog -p angular -u --commit-path libs/sdk --skip-unstable)
          # Make the content safe for multiline env var in GitHub Actions
          # See: https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-strings
          echo "body<<EOF" >> $GITHUB_ENV
          echo "$CHANGELOG_CONTENT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      # --- GitHub Release ---
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: satif-sdk ${{ steps.build.outputs.package_version }}
          body: ${{ env.body }}
          prerelease: contains(${{ github.ref_name }}, '-alpha') || contains(${{ github.ref_name }}, '-beta') || contains(${{ github.ref_name }}, '-rc')
          files: |
            libs/sdk/dist/*.whl
            libs/sdk/dist/*.tar.gz

      # --- PyPI Publish ---
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # No 'with: password:' needed when using trusted publishing
        # If using an environment configured in Trusted Publisher settings:
        # environment: pypi
        with:
          packages-dir: libs/sdk/dist/
          # Set skip-existing to true to avoid errors if the version already exists
          # skip-existing: true
          # To publish to TestPyPI instead (for testing):
          # repository-url: https://test.pypi.org/legacy/
